input AddShoppingCartInput {
  """
  UUID of user owning the shoppingcart.
  """
  userId: UUID!
  """
  UUIDs of product variants in shoppingcart.
  """
  productVariantIds: [UUID!]!
  """
  ShoppingCart name.
  """
  name: String!
}

"""
Describes the fields that a foreign types can be ordered by.

Only the Id valid at the moment.
"""
enum CommonOrderField {
  """
  Orders by "id".
  """
  ID
}

"""
Specifies the order of foreign types.
"""
input CommonOrderInput {
  """
  Order direction of shoppingcarts.
  """
  direction: OrderDirection
  """
  Field that shoppingcarts should be ordered by.
  """
  field: CommonOrderField
}

scalar DateTime

type Mutation {
  """
  Adds a shoppingcart with a user_id, a list of product_variant_ids and a name.

  Formats UUIDs as hyphenated lowercase Strings.
  """
  addShoppingCart(
    """
    AddShoppingCartInput
    """
    input: AddShoppingCartInput!
  ): ShoppingCart!
  """
  Updates name and/or product_variant_ids of a specific shoppingcart referenced with an id.

  Formats UUIDs as hyphenated lowercase Strings.
  """
  updateShoppingCart(
    """
    UpdateShoppingCartInput
    """
    input: UpdateShoppingCartInput!
  ): ShoppingCart!
  """
  Deletes shoppingcart of id.
  """
  deleteShoppingCart(
    """
    UUID of shoppingcart to delete.
    """
    id: UUID!
  ): Boolean!
}

"""
GraphQL order direction.
"""
enum OrderDirection {
  """
  Ascending order direction.
  """
  ASC
  """
  Descending order direction.
  """
  DESC
}

"""
Foreign type of a product variant.
"""
type ProductVariant @key(fields: "id", resolvable: false) {
  """
  UUID of the product variant.
  """
  id: UUID!
}

"""
A connection of ProductVariants.
"""
type ProductVariantConnection @shareable {
  """
  The resulting entities.
  """
  nodes: [ProductVariant!]!
  """
  Whether this connection has a next page.
  """
  hasNextPage: Boolean!
  """
  The total amount of items in this connection.
  """
  totalCount: Int!
}

type Query {
  """
  Retrieves all shoppingcarts.
  """
  shoppingcarts(
    """
    Describes that the `first` N shoppingcarts should be retrieved.
    """
    first: Int
    """
    Describes how many shoppingcarts should be skipped at the beginning.
    """
    skip: Int
    """
    Specifies the order in which shoppingcarts are retrieved.
    """
    orderBy: ShoppingCartOrderInput
  ): ShoppingCartConnection!
  """
  Retrieves shoppingcart of specific id.
  """
  shoppingcart(
    """
    UUID of shoppingcart to retrieve.
    """
    id: UUID!
  ): ShoppingCart!
}

scalar UUID

input UpdateShoppingCartInput {
  """
  UUID of shoppingcart to update.
  """
  id: UUID!
  """
  product variant UUIDs of shoppingcart to update
  """
  productVariantIds: [UUID!]
  """
  ShoppingCart name to update
  """
  name: String
}

"""
Foreign type of a user.
"""
type User @key(fields: "id", resolvable: false) {
  """
  UUID of the user.
  """
  id: UUID!
}

"""
The ShoppingCart of a user.
"""
type ShoppingCart @key(fields: "id") {
  """
  ShoppingCart UUID.
  """
  id: UUID!
  """
  User.
  """
  user: User!
  """
  Name of ShoppingCart.
  """
  name: String!
  """
  Timestamp when ShoppingCart was created.
  """
  createdAt: DateTime!
  """
  Timestamp when ShoppingCart was last updated.
  """
  lastUpdatedAt: DateTime!
  """
  Retrieves product variants.
  """
  productVariants(
    """
    Describes that the `first` N shoppingcarts should be retrieved.
    """
    first: Int
    """
    Describes how many shoppingcarts should be skipped at the beginning.
    """
    skip: Int
    """
    Specifies the order in which shoppingcarts are retrieved.
    """
    orderBy: CommonOrderInput
  ): ProductVariantConnection!
}

"""
A connection of ShoppingCarts.
"""
type ShoppingCartConnection @shareable {
  """
  The resulting entities.
  """
  nodes: [ShoppingCart!]!
  """
  Whether this connection has a next page.
  """
  hasNextPage: Boolean!
  """
  The total amount of items in this connection.
  """
  totalCount: Int!
}

"""
Describes the fields that a shoppingcart can be ordered by.
"""
enum ShoppingCartOrderField {
  """
  Orders by "id".
  """
  ID
  """
  Orders by "user_id".
  """
  USER_ID
  """
  Orders by "name".
  """
  NAME
  """
  Orders by "created_at".
  """
  CREATED_AT
  """
  Orders by "last_updated_at".
  """
  LAST_UPDATED_AT
}

"""
Specifies the order of shoppingcarts.
"""
input ShoppingCartOrderInput {
  """
  Order direction of shoppingcarts.
  """
  direction: OrderDirection
  """
  Field that shoppingcarts should be ordered by.
  """
  field: ShoppingCartOrderField
}

extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.3"
    import: [
      "@key"
      "@tag"
      "@shareable"
      "@inaccessible"
      "@override"
      "@external"
      "@provides"
      "@requires"
      "@composeDirective"
      "@interfaceObject"
    ]
  )
directive @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
directive @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
